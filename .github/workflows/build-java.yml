# This is a basic workflow to help you get started with Actions
name: Build Backend App

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
    tags:
      - '*'
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Web and Java build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #env:
    #  JAVA_VERSION: "11.0"
    #  FLUTTER_VERSION: "2.5.3"
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: maven

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract tag name
        id: extract_tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Set build number
        id: set_build_number
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        run: echo "TAG_NAME=1" >> $GITHUB_ENV
      # Build web app
      - name: build web
        working-directory: src/main/app
        run: |
          git submodule init
          git submodule update
          ./submodules/flutter/bin/flutter doctor
          ./submodules/flutter/bin/flutter pub get
          ./submodules/flutter/bin/flutter doctor
          ./submodules/flutter/bin/flutter build web --release --build-number ${{ env.TAG_NAME }}
          cp -R build/web ../resources/public
      # build backend

      - name: Set application version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          mvn versions:set -DnewVersion=${{ env.TAG_NAME }}
          mvn versions:commit
      - name: Build Java app
        run: mvn clean install -Dspring.main.allow-circular-references=true -DskipTests=true

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: docker/Dockerfile.lite
          tags: ${{ secrets.DOCKER_USERNAME }}/spendspentspent:${{ github.sha }}

      - name: Build and push Docker image (Release)
        uses: docker/build-push-action@v4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          context: .
          push: true
          file: docker/Dockerfile.lite
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/spendspentspent:latest
            ${{ secrets.DOCKER_USERNAME }}/spendspentspent:${{ env.TAG_NAME }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          file: target/SpendSpentSpent-*.jar
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

