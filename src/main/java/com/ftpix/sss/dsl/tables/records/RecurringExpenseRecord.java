/*
 * This file is generated by jOOQ.
 */
package com.ftpix.sss.dsl.tables.records;


import com.ftpix.sss.dsl.tables.RecurringExpense;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RecurringExpenseRecord extends UpdatableRecordImpl<RecurringExpenseRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.recurring_expense.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.recurring_expense.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.recurring_expense.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.recurring_expense.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.recurring_expense.category_id</code>.
     */
    public void setCategoryId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.recurring_expense.category_id</code>.
     */
    public Long getCategoryId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.recurring_expense.type</code>.
     */
    public void setType(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.recurring_expense.type</code>.
     */
    public Integer getType() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.recurring_expense.type_param</code>.
     */
    public void setTypeParam(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.recurring_expense.type_param</code>.
     */
    public Integer getTypeParam() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.recurring_expense.last_occurrence</code>.
     */
    public void setLastOccurrence(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.recurring_expense.last_occurrence</code>.
     */
    public String getLastOccurrence() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.recurring_expense.next_occurrence</code>.
     */
    public void setNextOccurrence(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.recurring_expense.next_occurrence</code>.
     */
    public String getNextOccurrence() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.recurring_expense.amount</code>.
     */
    public void setAmount(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.recurring_expense.amount</code>.
     */
    public Double getAmount() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>public.recurring_expense.income</code>.
     */
    public void setIncome(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.recurring_expense.income</code>.
     */
    public Integer getIncome() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecurringExpenseRecord
     */
    public RecurringExpenseRecord() {
        super(RecurringExpense.RECURRING_EXPENSE);
    }

    /**
     * Create a detached, initialised RecurringExpenseRecord
     */
    public RecurringExpenseRecord(Long id, String name, Long categoryId, Integer type, Integer typeParam, String lastOccurrence, String nextOccurrence, Double amount, Integer income) {
        super(RecurringExpense.RECURRING_EXPENSE);

        setId(id);
        setName(name);
        setCategoryId(categoryId);
        setType(type);
        setTypeParam(typeParam);
        setLastOccurrence(lastOccurrence);
        setNextOccurrence(nextOccurrence);
        setAmount(amount);
        setIncome(income);
        resetTouchedOnNotNull();
    }
}
